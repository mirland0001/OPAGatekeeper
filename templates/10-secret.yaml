# secret-policy-template.yaml
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8ssecretsbase64
spec:
  crd:
    spec:
      names:
        kind: K8sSecretsBase64
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8ssecretsbase64

        # Règles de validation
        violation[{"msg": msg}] {
          input.review.object.kind == "Secret"
          not input.review.object.metadata.annotations["security.kubernetes.io/encrypted"]
          msg := "Annotation 'security.kubernetes.io/encrypted' manquante"
        }

        violation[{"msg": msg}] {
          secret := input.review.object
          [_, encoded] := regex.split("\\.", secret.data[_])
          decoded := base64.decode(encoded)
          regex.match("[A-Za-z0-9+/=]{20,}", decoded)  # Détection base64 imbriqué
          msg := "Secret contient des données en base64 non chiffrées"
        }

        violation[{"msg": msg}] {
          not input.review.object.metadata.annotations["rotation-period"]
          msg := "Annotation 'rotation-period' manquante (ex: '30d')"
        }
